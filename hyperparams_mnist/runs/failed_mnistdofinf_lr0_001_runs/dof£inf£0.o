dataset: MNIST
dtype: float64
dof: inf
init_lr: 0.01
seed: 0
bn_indnorm: global
bn_tnorm: global
bn_indscale: global
bn_tscale: global
final_layer: GAP
likelihood: categorical
n_ind_scale: 8
x_ind shape: torch.Size([128, 1, 3, 3])
Inducing inputs learned: True
Model in CUDA: True
('Epoch 0', 'Objective: -2.031926525994838', 'Train Acc: 0.2769666666666667', 'Test Acc: 0.3997', 'Train LL: -1.9693911078325588', 'Test LL: -1.7832361354571555', 'Epoch Time (s): 117.10018462594599')
('Epoch 1', 'Objective: -1.7034800713399785', 'Train Acc: 0.45576666666666665', 'Test Acc: 0.5292', 'Train LL: -1.568004881857743', 'Test LL: -1.437734881758653', 'Epoch Time (s): 116.05499912798405')
('Epoch 2', 'Objective: -1.5175134548285623', 'Train Acc: 0.5504666666666667', 'Test Acc: 0.5037', 'Train LL: -1.3301845635960883', 'Test LL: -1.37745954441741', 'Epoch Time (s): 116.07582417223603')
('Epoch 3', 'Objective: -1.3769234396491483', 'Train Acc: 0.6213666666666666', 'Test Acc: 0.687', 'Train LL: -1.148535192199355', 'Test LL: -1.0346215297182204', 'Epoch Time (s): 116.07072469731793')
Traceback (most recent call last):
  File "/user/home/em17331/october_2023/hyperparams_mnist/../18layer.py", line 227, in <module>
    train_preds = torch.argmax(dkm.categorical_prediction(pred).probs, dim=1)
  File "/user/home/em17331/october_2023/dkm/dkm/output.py", line 55, in categorical_prediction
    return Categorical(t.exp(averaged_log_prob))
  File "/user/home/em17331/anaconda3/envs/dkm/lib/python3.9/site-packages/torch/distributions/categorical.py", line 64, in __init__
    super(Categorical, self).__init__(batch_shape, validate_args=validate_args)
  File "/user/home/em17331/anaconda3/envs/dkm/lib/python3.9/site-packages/torch/distributions/distribution.py", line 55, in __init__
    raise ValueError(
ValueError: Expected parameter probs (Tensor of shape (256, 10)) of distribution Categorical(probs: torch.Size([256, 10])) to satisfy the constraint Simplex(), but found invalid values:
tensor([[nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        ...,
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',
       grad_fn=<DivBackward0>)
